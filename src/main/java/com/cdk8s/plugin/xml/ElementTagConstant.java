package com.cdk8s.plugin.xml;

import java.util.HashMap;

/**
 * @author sjl
 */
public class ElementTagConstant {
    public static HashMap<String, HashMap<String, String[]>> TAG_CONSTANT = new HashMap<>();

    static {
        /* element */
        HashMap<String, String[]> elRowMap = new HashMap<>();
        elRowMap.put("gutter", new String[]{"10"});
        elRowMap.put("type", new String[]{"flex"});
        elRowMap.put("justify", new String[]{"start", "center", "end", "space-between", "space-around"});
        elRowMap.put("align-", new String[]{"top", "middle", "bottom"});
        elRowMap.put("tag", new String[]{"div"});
        TAG_CONSTANT.put("el-row", elRowMap);

        HashMap<String, String[]> elColMap = new HashMap<>();
        elColMap.put("span", new String[]{"8"});
        elColMap.put("offset", new String[]{"6"});
        elColMap.put("push", new String[]{"6"});
        elColMap.put("pull", new String[]{"6"});
        elColMap.put("xs", new String[]{"8"});
        elColMap.put("sm", new String[]{"8"});
        elColMap.put("lg", new String[]{"8"});
        elColMap.put("xl", new String[]{"8"});
        elColMap.put("tag", new String[]{"div"});
        TAG_CONSTANT.put("el-col", elColMap);

        HashMap<String, String[]> elContainerMap = new HashMap<>();
        elContainerMap.put("direction", new String[]{"horizontal ", "vertical"});
        TAG_CONSTANT.put("el-container", elContainerMap);

        HashMap<String, String[]> elHeaderMap = new HashMap<>();
        elHeaderMap.put("height", new String[]{"60px"});
        TAG_CONSTANT.put("el-header", elHeaderMap);

        HashMap<String, String[]> elAsideMap = new HashMap<>();
        elAsideMap.put("width", new String[]{"300px"});
        TAG_CONSTANT.put("el-aside", elAsideMap);

        HashMap<String, String[]> elFooterMap = new HashMap<>();
        elFooterMap.put("width", new String[]{"60px"});
        TAG_CONSTANT.put("el-footer", elFooterMap);

        HashMap<String, String[]> elButtonMap = new HashMap<>();
        elButtonMap.put("size", new String[]{"medium", "small", "mini"});
        elButtonMap.put("type", new String[]{"primary", "success", "warning", "danger", "info", "text"});
        elButtonMap.put("plain", new String[]{"true", "false"});
        elButtonMap.put("round", new String[]{"true", "false"});
        elButtonMap.put("circle", new String[]{"true", "false"});
        elButtonMap.put("loading", new String[]{"true", "false"});
        elButtonMap.put("disabled", new String[]{"true", "false"});
        elButtonMap.put("icon", new String[]{"el-icon-plus", "el-icon-edit", "el-icon-delete", "el-icon-search"});
        elButtonMap.put("autofocus", new String[]{"true", "false"});
        elButtonMap.put("native-type", new String[]{"button", "submit", "reset"});
        TAG_CONSTANT.put("el-button", elButtonMap);

        HashMap<String, String[]> elButtonGroupMap = new HashMap<>();
        elButtonGroupMap.put("align", new String[]{});
        TAG_CONSTANT.put("el-button-group", elButtonGroupMap);

        HashMap<String, String[]> elRadioMap = new HashMap<>();
        elRadioMap.put("label", new String[]{"div"});
        elRadioMap.put("disabled", new String[]{"true", "false"});
        elRadioMap.put("border", new String[]{"true", "false"});
        elRadioMap.put("size", new String[]{"medium", "small", "mini"});
        elRadioMap.put("name", new String[]{});
        elRadioMap.put("@change", new String[]{});
        TAG_CONSTANT.put("el-radio", elRadioMap);

        HashMap<String, String[]> elRadioGroupMap = new HashMap<>();
        elRadioGroupMap.put("size", new String[]{"medium", "small", "mini"});
        elRadioGroupMap.put("disabled", new String[]{"true", "false"});
        elRadioGroupMap.put("text-color", new String[]{"#ffffff"});
        elRadioGroupMap.put("fill", new String[]{"#409eff"});
        elRadioGroupMap.put("@change", new String[]{});
        TAG_CONSTANT.put("el-radio-group", elRadioGroupMap);

        HashMap<String, String[]> elRadioButtonMap = new HashMap<>();
        elRadioButtonMap.put("label", new String[]{});
        elRadioButtonMap.put("disabled", new String[]{"true", "false"});
        elRadioButtonMap.put("name", new String[]{});
        TAG_CONSTANT.put("el-radio-button", elRadioButtonMap);

        HashMap<String, String[]> elCheckboxMap = new HashMap<>();
        elCheckboxMap.put("label", new String[]{});
        elCheckboxMap.put("true-label", new String[]{});
        elCheckboxMap.put("false-label", new String[]{});
        elCheckboxMap.put("disabled", new String[]{"true", "false"});
        elCheckboxMap.put("border", new String[]{"true", "false"});
        elCheckboxMap.put("size", new String[]{"medium", "small", "mini"});
        elCheckboxMap.put("name", new String[]{});
        elCheckboxMap.put("checked", new String[]{"true", "false"});
        elCheckboxMap.put("indeterminate", new String[]{"true", "false"});
        elCheckboxMap.put("@change", new String[]{});
        TAG_CONSTANT.put("el-checkbox", elCheckboxMap);

        HashMap<String, String[]> elCheckboxGroupMap = new HashMap<>();
        elCheckboxGroupMap.put("size", new String[]{"medium", "small", "mini"});
        elCheckboxGroupMap.put("disabled", new String[]{"true", "false"});
        elCheckboxGroupMap.put("min", new String[]{"1"});
        elCheckboxGroupMap.put("max", new String[]{"10"});
        elCheckboxGroupMap.put("text-color", new String[]{"#ffffff"});
        elCheckboxGroupMap.put("fill", new String[]{"#409eff"});
        elCheckboxGroupMap.put("@change", new String[]{});
        TAG_CONSTANT.put("el-checkbox-group", elCheckboxGroupMap);

        HashMap<String, String[]> elCheckboxButtonMap = new HashMap<>();
        elCheckboxButtonMap.put("label", new String[]{});
        elCheckboxButtonMap.put("true-label", new String[]{});
        elCheckboxButtonMap.put("false-label", new String[]{});
        elCheckboxButtonMap.put("disabled", new String[]{"true", "false"});
        elCheckboxButtonMap.put("name", new String[]{});
        elCheckboxButtonMap.put("checked", new String[]{"true", "false"});
        TAG_CONSTANT.put("el-checkbox-button", elCheckboxButtonMap);

        HashMap<String, String[]> elInputMap = new HashMap<>();
        elInputMap.put("type", new String[]{"text", "textarea"});
        elInputMap.put("value", new String[]{});
        elInputMap.put("maxlength", new String[]{"100"});
        elInputMap.put("minlength", new String[]{"1"});
        elInputMap.put("placeholder", new String[]{});
        elInputMap.put("clearable", new String[]{"true", "false"});
        elInputMap.put("disabled", new String[]{"true", "false"});
        elInputMap.put("size", new String[]{"medium", "small", "mini"});
        elInputMap.put("prefix-icon", new String[]{});
        elInputMap.put("suffix-icon", new String[]{});
        elInputMap.put("show-password", new String[]{});
        elInputMap.put("rows", new String[]{"2"});
        elInputMap.put("autosize", new String[]{"true", "false"});
        elInputMap.put("auto-complete", new String[]{"true", "false"});
        elInputMap.put("name", new String[]{});
        elInputMap.put("readonly", new String[]{"true", "false"});
        elInputMap.put("max", new String[]{});
        elInputMap.put("min", new String[]{});
        elInputMap.put("step", new String[]{});
        elInputMap.put("resize", new String[]{"none", "both", "horizontal", "vertical"});
        elInputMap.put("autofocus", new String[]{"true", "false"});
        elInputMap.put("form", new String[]{});
        elInputMap.put("label", new String[]{});
        elInputMap.put("tabindex", new String[]{});
        elInputMap.put("@blur", new String[]{});
        elInputMap.put("@focus", new String[]{});
        elInputMap.put("@change", new String[]{});
        TAG_CONSTANT.put("el-input", elInputMap);

        HashMap<String, String[]> elAutocompleteMap = new HashMap<>();
        elAutocompleteMap.put("placeholder", new String[]{});
        elAutocompleteMap.put("disabled", new String[]{"true", "false"});
        elAutocompleteMap.put("value-key", new String[]{});
        elAutocompleteMap.put("value", new String[]{});
        elAutocompleteMap.put("debounce", new String[]{"300"});
        elAutocompleteMap.put("placement", new String[]{"top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end"});
        elAutocompleteMap.put("fetch-suggestions", new String[]{"Function(queryString, callback)"});
        elAutocompleteMap.put("popper-class", new String[]{});
        elAutocompleteMap.put("trigger-on-focus", new String[]{"true", "false"});
        elAutocompleteMap.put("name", new String[]{});
        elAutocompleteMap.put("select-when-unmatched", new String[]{"true", "false"});
        elAutocompleteMap.put("label", new String[]{});
        elAutocompleteMap.put("align", new String[]{});
        elAutocompleteMap.put("prefix-icon", new String[]{});
        elAutocompleteMap.put("suffix-icon", new String[]{});
        elAutocompleteMap.put("@select", new String[]{});
        elAutocompleteMap.put("@focus", new String[]{});
        TAG_CONSTANT.put("el-autocomplete", elAutocompleteMap);

        HashMap<String, String[]> elInputNumberMap = new HashMap<>();
        elInputNumberMap.put("value", new String[]{});
        elInputNumberMap.put("min", new String[]{"-Infinity"});
        elInputNumberMap.put("max", new String[]{"Infinity"});
        elInputNumberMap.put("step", new String[]{"1"});
        elInputNumberMap.put("size", new String[]{"large", "small"});
        elInputNumberMap.put("disabled", new String[]{"true", "false"});
        elInputNumberMap.put("controls", new String[]{"true", "false"});
        elInputNumberMap.put("controls-position", new String[]{"right"});
        elInputNumberMap.put("name", new String[]{});
        elInputNumberMap.put("label", new String[]{});
        elInputNumberMap.put("@change", new String[]{});
        elInputNumberMap.put("@blur", new String[]{});
        elInputNumberMap.put("@focus", new String[]{});
        TAG_CONSTANT.put("el-input-number", elInputNumberMap);

        HashMap<String, String[]> elSelectMap = new HashMap<>();
        elSelectMap.put("multiple", new String[]{"true", "false"});
        elSelectMap.put("disabled", new String[]{"true", "false"});
        elSelectMap.put("value-key", new String[]{});
        elSelectMap.put("size", new String[]{"medium", "small", "mini"});
        elSelectMap.put("clearable", new String[]{"true", "false"});
        elSelectMap.put("collapse-tags", new String[]{"true", "false"});
        elSelectMap.put("multiple-limit", new String[]{"0"});
        elSelectMap.put("name", new String[]{});
        elSelectMap.put("auto-complete", new String[]{"off"});
        elSelectMap.put("placeholder", new String[]{});
        elSelectMap.put("filterable", new String[]{"true", "false"});
        elSelectMap.put("allow-create", new String[]{"true", "false"});
        elSelectMap.put("filter-method", new String[]{"function"});
        elSelectMap.put("remote", new String[]{"true", "false"});
        elSelectMap.put("remote-method", new String[]{"function"});
        elSelectMap.put("loading", new String[]{"true", "false"});
        elSelectMap.put("loading-text", new String[]{"加载中"});
        elSelectMap.put("no-match-text", new String[]{"无匹配数据"});
        elSelectMap.put("no-data-text", new String[]{"无数据"});
        elSelectMap.put("popper-class", new String[]{});
        elSelectMap.put("reserve-keyword", new String[]{"true", "false"});
        elSelectMap.put("default-first-option", new String[]{"true", "false"});
        elSelectMap.put("popper-append-to-body", new String[]{"true", "false"});
        elSelectMap.put("automatic-dropdown", new String[]{"true", "false"});
        elSelectMap.put("@change", new String[]{});
        elSelectMap.put("@visible-change", new String[]{});
        elSelectMap.put("@remove-tag", new String[]{});
        elSelectMap.put("@clear", new String[]{});
        elSelectMap.put("@blur", new String[]{});
        elSelectMap.put("@focus", new String[]{});
        TAG_CONSTANT.put("el-select", elSelectMap);
        HashMap<String, String[]> elOptionGroupMap = new HashMap<>();
        elOptionGroupMap.put("label", new String[]{});
        elOptionGroupMap.put("disabled", new String[]{"true", "false"});
        TAG_CONSTANT.put("el-option-group", elOptionGroupMap);
        HashMap<String, String[]> elOptionMap = new HashMap<>();
        elOptionMap.put("label", new String[]{});
        elOptionMap.put("value", new String[]{});
        elOptionMap.put("disabled", new String[]{"true", "false"});
        TAG_CONSTANT.put("el-option", elOptionMap);

        HashMap<String, String[]> elCascaderMap = new HashMap<>();
        elCascaderMap.put("options", new String[]{"[{value: 'zhinan', label: '指南', children: [{value: 'shejiyuanze', label: '设计原则'}]}]"});
        elCascaderMap.put("props", new String[]{});
        elCascaderMap.put("value", new String[]{});
        elCascaderMap.put("separator", new String[]{"/"});
        elCascaderMap.put("popper-class", new String[]{});
        elCascaderMap.put("placeholder", new String[]{});
        elCascaderMap.put("disabled", new String[]{"true", "false"});
        elCascaderMap.put("clearable", new String[]{"true", "false"});
        elCascaderMap.put("expand-trigger", new String[]{"click", "hover"});
        elCascaderMap.put("show-all-levels", new String[]{"true", "false"});
        elCascaderMap.put("filterable", new String[]{"true", "false"});
        elCascaderMap.put("debounce", new String[]{"300"});
        elCascaderMap.put("change-on-select", new String[]{"true", "false"});
        elCascaderMap.put("size", new String[]{"medium", "small", "mini"});
        elCascaderMap.put("before-filter", new String[]{"function"});
        elCascaderMap.put("@change", new String[]{});
        elCascaderMap.put("@active-item-change", new String[]{});
        elCascaderMap.put("@blur", new String[]{});
        elCascaderMap.put("@focus", new String[]{});
        TAG_CONSTANT.put("el-cascader", elCascaderMap);

        HashMap<String, String[]> elSwitchMap = new HashMap<>();
        elSwitchMap.put("disabled", new String[]{"true", "false"});
        elSwitchMap.put("width", new String[]{"40"});
        elSwitchMap.put("active-icon-class", new String[]{});
        elSwitchMap.put("inactive-icon-class", new String[]{});
        elSwitchMap.put("active-text", new String[]{});
        elSwitchMap.put("inactive-text", new String[]{});
        elSwitchMap.put("active-value", new String[]{"true", "false", "1"});
        elSwitchMap.put("inactive-value", new String[]{"true", "false", "1"});
        elSwitchMap.put("active-color", new String[]{"#409eff"});
        elSwitchMap.put("inactive-color", new String[]{"#c0ccda"});
        elSwitchMap.put("name", new String[]{});
        elSwitchMap.put("@change", new String[]{});
        TAG_CONSTANT.put("el-switch", elSwitchMap);

        HashMap<String, String[]> elSliderMap = new HashMap<>();
        elSliderMap.put("min", new String[]{"0"});
        elSliderMap.put("max", new String[]{"100"});
        elSliderMap.put("disabled", new String[]{"true", "false"});
        elSliderMap.put("step", new String[]{"1"});
        elSliderMap.put("show-input", new String[]{"true", "false"});
        elSliderMap.put("show-input-controls", new String[]{"true", "false"});
        elSliderMap.put("input-size", new String[]{"large", "medium", "small", "mini"});
        elSliderMap.put("show-stops", new String[]{"true", "false"});
        elSliderMap.put("show-tooltipss", new String[]{"true", "false"});
        elSliderMap.put("format-tooltip", new String[]{"function"});
        elSliderMap.put("range", new String[]{"true", "false"});
        elSliderMap.put("vertical", new String[]{"true", "false"});
        elSliderMap.put("height", new String[]{});
        elSliderMap.put("label", new String[]{});
        elSliderMap.put("debounce", new String[]{"300"});
        elSliderMap.put("tooltip-class", new String[]{});
        elSliderMap.put("@change", new String[]{});
        TAG_CONSTANT.put("el-slider", elSliderMap);

        HashMap<String, String[]> elTimePickerMap = new HashMap<>();
        elTimePickerMap.put("readonly", new String[]{"true", "false"});
        elTimePickerMap.put("disabled", new String[]{"true", "false"});
        elTimePickerMap.put("editable", new String[]{"true", "false"});
        elTimePickerMap.put("clearable", new String[]{"true", "false"});
        elTimePickerMap.put("size", new String[]{"medium", "small", "mini"});
        elTimePickerMap.put("placeholder", new String[]{});
        elTimePickerMap.put("start-placeholder", new String[]{});
        elTimePickerMap.put("end-placeholder", new String[]{});
        elTimePickerMap.put("is-range", new String[]{"true", "false"});
        elTimePickerMap.put("arrow-control", new String[]{"true", "false"});
        elTimePickerMap.put("value", new String[]{});
        elTimePickerMap.put("align-", new String[]{"left", "center", "right"});
        elTimePickerMap.put("popper-class", new String[]{});
        elTimePickerMap.put("picker-options", new String[]{"{ selectableRange: ['09:30:00 - 12:00:00', '14:30:00 - 18:30:00'], format: 'HH:mm:ss'}"});
        elTimePickerMap.put("range-separator", new String[]{"-"});
        elTimePickerMap.put("value-format", new String[]{});
        elTimePickerMap.put("default-value", new String[]{});
        elTimePickerMap.put("name", new String[]{});
        elTimePickerMap.put("prefix-icon", new String[]{"el-icon-time"});
        elTimePickerMap.put("clear-icon", new String[]{"el-icon-circle-close"});
        elTimePickerMap.put("@change", new String[]{});
        elTimePickerMap.put("@blur", new String[]{});
        elTimePickerMap.put("@focus", new String[]{});
        TAG_CONSTANT.put("el-time-picker", elTimePickerMap);
        HashMap<String, String[]> elTimeSelectMap = new HashMap<>();
        elTimeSelectMap.put("placeholder", new String[]{});
        elTimeSelectMap.put("picker-options", new String[]{"{ start: '08:30', step: '00:15', end: '18:30', minTime: '00:00', maxTime: '00:00'}"});
        TAG_CONSTANT.put("el-time-select", elTimeSelectMap);

        HashMap<String, String[]> elDatePickerMap = new HashMap<>();
        elDatePickerMap.put("readonly", new String[]{"true", "false"});
        elDatePickerMap.put("disabled", new String[]{"true", "false"});
        elDatePickerMap.put("editable", new String[]{"true", "false"});
        elDatePickerMap.put("clearable", new String[]{"true", "false"});
        elDatePickerMap.put("size", new String[]{"large", "small", "mini"});
        elDatePickerMap.put("placeholder", new String[]{});
        elDatePickerMap.put("start-placeholder", new String[]{});
        elDatePickerMap.put("end-placeholder", new String[]{});
        elDatePickerMap.put("type", new String[]{"year", "month", "date", "dates", "week", "datetime", "datetimerange", "daterange"});
        elDatePickerMap.put("format", new String[]{"yyyy-MM-dd"});
        elDatePickerMap.put("align-", new String[]{"left", "center", "right"});
        elDatePickerMap.put("popper-class", new String[]{});
        elDatePickerMap.put("picker-options", new String[]{"{shortcuts: [], disabledDate,: function, firstDayOfWeek: 7, onPick: Function({ maxDate, minDate })}"});
        elDatePickerMap.put("range-separator", new String[]{"-"});
        elDatePickerMap.put("default-value", new String[]{});
        elDatePickerMap.put("default-time", new String[]{});
        elDatePickerMap.put("value-format", new String[]{});
        elDatePickerMap.put("name", new String[]{});
        elDatePickerMap.put("unlink-panels", new String[]{"true", "false"});
        elDatePickerMap.put("prefix-icon", new String[]{"el-icon-date"});
        elDatePickerMap.put("clear-icon", new String[]{"el-icon-circle-close"});
        elDatePickerMap.put("@change", new String[]{});
        elDatePickerMap.put("@blur", new String[]{});
        elDatePickerMap.put("@focus", new String[]{});
        TAG_CONSTANT.put("el-date-picker", elDatePickerMap);
        HashMap<String, String[]> elUploadMap = new HashMap<>();
        elUploadMap.put("action", new String[]{});
        elUploadMap.put("headers", new String[]{});
        elUploadMap.put("multiple", new String[]{"true", "false"});
        elUploadMap.put("data", new String[]{});
        elUploadMap.put("name", new String[]{"file"});
        elUploadMap.put("with-credentials", new String[]{"true", "false"});
        elUploadMap.put("show-file-list", new String[]{"true", "false"});
        elUploadMap.put("drag", new String[]{"true", "false"});
        elUploadMap.put("accept", new String[]{});
        elUploadMap.put("on-preview", new String[]{"function(file)"});
        elUploadMap.put("on-remove", new String[]{"function(file, fileList)"});
        elUploadMap.put("on-success", new String[]{"function(response, file, fileList)"});
        elUploadMap.put("on-error", new String[]{"function(err, file, fileList)"});
        elUploadMap.put("on-progress", new String[]{"function(event, file, fileList)"});
        elUploadMap.put("on-change", new String[]{"function(file, fileList)"});
        elUploadMap.put("before-upload", new String[]{"function(file)"});
        elUploadMap.put("before-remove", new String[]{"function(file, fileList)"});
        elUploadMap.put("list-type", new String[]{"text", "picture", "picture-card"});
        elUploadMap.put("auto-upload", new String[]{"true", "false"});
        elUploadMap.put("file-list", new String[]{"[]"});
        elUploadMap.put("http-request", new String[]{});
        elUploadMap.put("disabled", new String[]{"true", "false"});
        elUploadMap.put("limit", new String[]{"10"});
        elUploadMap.put("on-exceed", new String[]{"function(files, fileList)"});
        elUploadMap.put("clearFiles", new String[]{});
        elUploadMap.put("abort", new String[]{});
        TAG_CONSTANT.put("el-upload", elUploadMap);

        HashMap<String, String[]> elRateMap = new HashMap<>();
        elRateMap.put("max", new String[]{"5"});
        elRateMap.put("disabled", new String[]{"true", "false"});
        elRateMap.put("allow-half", new String[]{"true", "false"});
        elRateMap.put("low-threshold", new String[]{"2"});
        elRateMap.put("high-threshold", new String[]{"4"});
        elRateMap.put("colors", new String[]{"['#f7ba2a', '#f7ba2a', '#f7ba2a']"});
        elRateMap.put("void-color", new String[]{"#c6d1de"});
        elRateMap.put("disabled-void-color", new String[]{"#eff2f7"});
        elRateMap.put("icon-classes", new String[]{"['el-icon-star-on', 'el-icon-star-on','el-icon-star-on']"});
        elRateMap.put("void-icon-class", new String[]{"el-icon-star-off"});
        elRateMap.put("disabled-void-icon-class", new String[]{"el-icon-star-on"});
        elRateMap.put("show-text", new String[]{"true", "false"});
        elRateMap.put("show-score", new String[]{"true", "false"});
        elRateMap.put("text-color", new String[]{"#1f2d3d"});
        elRateMap.put("texts", new String[]{"['极差', '失望', '一般', '满意', '惊喜']"});
        elRateMap.put("score-template", new String[]{"{value}"});
        elRateMap.put("@change", new String[]{});
        TAG_CONSTANT.put("el-rate", elRateMap);
        HashMap<String, String[]> elColorPickerMap = new HashMap<>();
        elColorPickerMap.put("disabled", new String[]{"true", "false"});
        elColorPickerMap.put("size", new String[]{"medium", "small", "mini"});
        elColorPickerMap.put("show-alpha", new String[]{"true", "false"});
        elColorPickerMap.put("color-format", new String[]{"hsl", "hsv", "hex", "rgb"});
        elColorPickerMap.put("popper-class", new String[]{});
        elColorPickerMap.put("predefine", new String[]{});
        elColorPickerMap.put("@change", new String[]{});
        elColorPickerMap.put("@active-change", new String[]{});
        TAG_CONSTANT.put("el-color-picker", elColorPickerMap);
        HashMap<String, String[]> elTransferMap = new HashMap<>();
        elTransferMap.put("data", new String[]{"[{key: 1, label: '1'}, {key: 2, label: '2'}]"});
        elTransferMap.put("filterable", new String[]{"true", "false"});
        elTransferMap.put("filter-placeholder", new String[]{"请输入搜索内容"});
        elTransferMap.put("filter-method", new String[]{});
        elTransferMap.put("target-order", new String[]{"original", "push", "unshift"});
        elTransferMap.put("titles", new String[]{"['列表 1', '列表 2']"});
        elTransferMap.put("button-texts", new String[]{"[]"});
        elTransferMap.put("render-content", new String[]{"function(h, option)"});
        elTransferMap.put("format", new String[]{"{ noChecked: '${checked}/${total}', hasChecked: '${checked}/${total}' }"});
        elTransferMap.put("props", new String[]{});
        elTransferMap.put("left-default-checked", new String[]{"[]"});
        elTransferMap.put("right-default-checked", new String[]{"[]"});
        elTransferMap.put("clearQuery", new String[]{});
        elTransferMap.put("@change", new String[]{});
        elTransferMap.put("@left-check-change", new String[]{});
        elTransferMap.put("@right-check-change", new String[]{});
        TAG_CONSTANT.put("el-transfer", elTransferMap);

        HashMap<String, String[]> elFormMap = new HashMap<>();
        elFormMap.put("model", new String[]{});
        elFormMap.put("rules", new String[]{});
        elFormMap.put("inline", new String[]{"true", "false"});
        elFormMap.put("label-position", new String[]{"right", "left", "top"});
        elFormMap.put("label-width", new String[]{"80px"});
        elFormMap.put("label-suffix", new String[]{});
        elFormMap.put("show-message", new String[]{"true", "false"});
        elFormMap.put("inline-message", new String[]{"true", "false"});
        elFormMap.put("status-icon", new String[]{"true", "false"});
        elFormMap.put("validate-on-rule-change", new String[]{"true", "false"});
        elFormMap.put("size", new String[]{"medium", "small", "mini"});
        elFormMap.put("disabled", new String[]{"true", "false"});
        elFormMap.put("validate", new String[]{"Function(callback: Function(boolean, object))"});
        elFormMap.put("validateField", new String[]{"Function(prop: string, callback: Function(errorMessage: string))"});
        elFormMap.put("resetFields", new String[]{"Function"});
        elFormMap.put("clearValidate", new String[]{"Function"});
        elFormMap.put("@validate", new String[]{});
        TAG_CONSTANT.put("el-form", elFormMap);
        HashMap<String, String[]> elFormItemMap = new HashMap<>();
        elFormItemMap.put("prop", new String[]{});
        elFormItemMap.put("label", new String[]{});
        elFormItemMap.put("label-width", new String[]{"80px"});
        elFormItemMap.put("required", new String[]{"true", "false"});
        elFormItemMap.put("rules", new String[]{});
        elFormItemMap.put("error", new String[]{});
        elFormItemMap.put("show-message", new String[]{"true", "false"});
        elFormItemMap.put("inline-message", new String[]{"true", "false"});
        elFormItemMap.put("size", new String[]{"medium", "small", "mini"});
        elFormItemMap.put("resetField", new String[]{"function"});
        TAG_CONSTANT.put("el-form-item", elFormItemMap);

        HashMap<String, String[]> elTableMap = new HashMap<>();
        elTableMap.put("height", new String[]{});
        elTableMap.put("max-height", new String[]{});
        elTableMap.put("stripe", new String[]{"true", "false"});
        elTableMap.put("border", new String[]{"true", "false"});
        elTableMap.put("size", new String[]{"medium", "small", "mini"});
        elTableMap.put("fit", new String[]{"true", "false"});
        elTableMap.put("show-header", new String[]{"true", "false"});
        elTableMap.put("highlight-current-row", new String[]{"true", "false"});
        elTableMap.put("current-row-key", new String[]{});
        elTableMap.put("row-class-name", new String[]{});
        elTableMap.put("row-style", new String[]{});
        elTableMap.put("cell-class-name", new String[]{});
        elTableMap.put("cell-style", new String[]{});
        elTableMap.put("header-row-class-name", new String[]{});
        elTableMap.put("header-row-style", new String[]{});
        elTableMap.put("header-cell-class-name", new String[]{});
        elTableMap.put("header-cell-style", new String[]{});
        elTableMap.put("row-key", new String[]{});
        elTableMap.put("empty-text", new String[]{"暂无数据"});
        elTableMap.put("default-expand-all", new String[]{"true", "false"});
        elTableMap.put("expand-row-keys", new String[]{});
        elTableMap.put("default-sort", new String[]{"ascending", "descending"});
        elTableMap.put("tooltip-effect", new String[]{"dark", "light"});
        elTableMap.put("show-summary", new String[]{"true", "false"});
        elTableMap.put("sum-text", new String[]{"合计"});
        elTableMap.put("summary-method", new String[]{});
        elTableMap.put("span-method", new String[]{});
        elTableMap.put("select-on-indeterminate", new String[]{});
        elTableMap.put("@select", new String[]{"function(selection, row)"});
        elTableMap.put("@select-all", new String[]{"function(selection)"});
        elTableMap.put("@selection-change", new String[]{"function(selection)"});
        elTableMap.put("@cell-mouse-enter", new String[]{"function(row, column, cell, event)"});
        elTableMap.put("@cell-mouse-leave", new String[]{"function(row, column, cell, event)"});
        elTableMap.put("@cell-click", new String[]{"function(row, column, cell, event)"});
        elTableMap.put("@cell-dblclick", new String[]{"function(row, column, cell, event)"});
        elTableMap.put("@row-click", new String[]{"function(row, event, column)"});
        elTableMap.put("@row-contextmenu", new String[]{"function(row, event)"});
        elTableMap.put("@row-dblclick", new String[]{"function(row, event)"});
        elTableMap.put("@header-click", new String[]{"function(column, event)"});
        elTableMap.put("@header-contextmenu", new String[]{"function(column, event)"});
        elTableMap.put("@sort-change", new String[]{"function({ column, prop, order })"});
        elTableMap.put("@filter-change", new String[]{"function(filters)"});
        elTableMap.put("@current-change", new String[]{"function(currentRow, oldCurrentRow)"});
        elTableMap.put("@header-dragend", new String[]{"function(newWidth, oldWidth, column, event)"});
        elTableMap.put("@expand-change", new String[]{"function(row, expandedRows)"});
        elTableMap.put("clearSelection", new String[]{});
        elTableMap.put("toggleRowSelection", new String[]{"function(row, selected)"});
        elTableMap.put("toggleRowExpansion", new String[]{"function(row, expanded)"});
        elTableMap.put("setCurrentRow", new String[]{"function(row)"});
        elTableMap.put("clearSort", new String[]{"function"});
        elTableMap.put("clearFilter", new String[]{"function"});
        elTableMap.put("doLayout", new String[]{"function"});
        TAG_CONSTANT.put("el-table", elTableMap);

        HashMap<String, String[]> elTableColumnMap = new HashMap<>();
        elTableColumnMap.put("type", new String[]{"selection", "index", "expand"});
        elTableColumnMap.put("index", new String[]{});
        elTableColumnMap.put("column-key", new String[]{});
        elTableColumnMap.put("label", new String[]{});
        elTableColumnMap.put("prop", new String[]{});
        elTableColumnMap.put("width", new String[]{"100px"});
        elTableColumnMap.put("min-width", new String[]{"100px"});
        elTableColumnMap.put("fixed", new String[]{"true", "left", "right"});
        elTableColumnMap.put("render-header", new String[]{"Function(h, { column, $index })"});
        elTableColumnMap.put("sortable", new String[]{"true", "false", "custom"});
        elTableColumnMap.put("sort-method", new String[]{"Function(a, b)"});
        elTableColumnMap.put("sort-by", new String[]{});
        elTableColumnMap.put("resizable", new String[]{"true", "false"});
        elTableColumnMap.put("formatter", new String[]{"Function(row, column, cellValue, index)"});
        elTableColumnMap.put("show-overflow-tooltip", new String[]{"true", "false"});
        elTableColumnMap.put("align-", new String[]{"left", "center", "right"});
        elTableColumnMap.put("header-align", new String[]{"left", "center", "right"});
        elTableColumnMap.put("class-name", new String[]{});
        elTableColumnMap.put("label-class-name", new String[]{});
        elTableColumnMap.put("selectable", new String[]{"Function(row, index)"});
        elTableColumnMap.put("reserve-selection", new String[]{"true", "false"});
        elTableColumnMap.put("filters", new String[]{"[{ text, value }]"});
        elTableColumnMap.put("filter-placement", new String[]{});
        elTableColumnMap.put("filter-multiple", new String[]{"true", "false"});
        elTableColumnMap.put("filter-method", new String[]{"Function(value, row, column)"});
        elTableColumnMap.put("filtered-value", new String[]{"[]"});
        TAG_CONSTANT.put("el-table-column", elTableColumnMap);

        HashMap<String, String[]> elTagMap = new HashMap<>();
        elTagMap.put("type", new String[]{"success", "info", "warning", "danger"});
        elTagMap.put("closable", new String[]{"true", "false"});
        elTagMap.put("disable-transitions", new String[]{"true", "false"});
        elTagMap.put("hit", new String[]{"true", "false"});
        elTagMap.put("color", new String[]{});
        elTagMap.put("size", new String[]{"medium", "small", "mini"});
        elTagMap.put("@close", new String[]{});
        TAG_CONSTANT.put("el-tag", elTagMap);

        HashMap<String, String[]> elProgressMap = new HashMap<>();
        elProgressMap.put("percentage", new String[]{"0"});
        elProgressMap.put("type", new String[]{"line", "circle"});
        elProgressMap.put("stroke-width", new String[]{"6"});
        elProgressMap.put("text-inside", new String[]{"true", "false"});
        elProgressMap.put("status", new String[]{"success", "exception"});
        elProgressMap.put("color", new String[]{});
        elProgressMap.put("width", new String[]{"126"});
        elProgressMap.put("show-text", new String[]{"true", "false"});
        TAG_CONSTANT.put("el-progress", elProgressMap);

        HashMap<String, String[]> elTreeMap = new HashMap<>();
        elTreeMap.put("data", new String[]{"[{label, children: {label, children}]"});
        elTreeMap.put("empty-text", new String[]{"暂无内容"});
        elTreeMap.put("node-key", new String[]{});
        elTreeMap.put("props", new String[]{"{label, children, disabled, isLeaf}"});
        elTreeMap.put("render-after-expand", new String[]{"true", "false"});
        elTreeMap.put("load", new String[]{"function(node, resolve)"});
        elTreeMap.put("render-content", new String[]{"Function(h, { node, data, store }"});
        elTreeMap.put("highlight-current", new String[]{"true", "false"});
        elTreeMap.put("default-expand-all", new String[]{"true", "false"});
        elTreeMap.put("expand-on-click-node", new String[]{"true", "false"});
        elTreeMap.put("auto-expand-parent", new String[]{"true", "false"});
        elTreeMap.put("default-expanded-keys", new String[]{"[]"});
        elTreeMap.put("show-checkbox", new String[]{"true", "false"});
        elTreeMap.put("check-strictly", new String[]{"true", "false"});
        elTreeMap.put("default-checked-keys", new String[]{"[]"});
        elTreeMap.put("filter-node-method", new String[]{"Function(value, data, node)"});
        elTreeMap.put("accordion", new String[]{"true", "false"});
        elTreeMap.put("indent", new String[]{"16"});
        elTreeMap.put("lazy", new String[]{"true", "false"});
        elTreeMap.put("draggable", new String[]{"true", "false"});
        elTreeMap.put("allow-drag", new String[]{"Function(node)"});
        elTreeMap.put("allow-drop", new String[]{"Function(draggingNode, dropNode, type)"});
        elTreeMap.put("filter", new String[]{"function"});
        elTreeMap.put("updateKeyChildren", new String[]{"function(key, data)"});
        elTreeMap.put("getCheckedNodes", new String[]{"function(leafOnly)"});
        elTreeMap.put("setCheckedNodes", new String[]{"function(nodes)"});
        elTreeMap.put("getCheckedKeys", new String[]{"function(leafOnly)"});
        elTreeMap.put("setCheckedKeys", new String[]{"function(keys, leafOnly)"});
        elTreeMap.put("setChecked", new String[]{"function(key/data, checked, deep)"});
        elTreeMap.put("getHalfCheckedNodes", new String[]{"function"});
        elTreeMap.put("getHalfCheckedKeys", new String[]{"function"});
        elTreeMap.put("getCurrentKey", new String[]{"function"});
        elTreeMap.put("getCurrentNode", new String[]{"function"});
        elTreeMap.put("setCurrentKey", new String[]{"function(key)"});
        elTreeMap.put("setCurrentNode", new String[]{"function(node)"});
        elTreeMap.put("getNode", new String[]{"function(data)"});
        elTreeMap.put("remove", new String[]{"function(data)"});
        elTreeMap.put("append", new String[]{"function(data, parentNode)"});
        elTreeMap.put("insertBefore", new String[]{"function(data, refNode)"});
        elTreeMap.put("insertAfter", new String[]{"function(data, refNode)"});
        elTreeMap.put("@node-click", new String[]{});
        elTreeMap.put("@node-contextmenu", new String[]{});
        elTreeMap.put("@check-change", new String[]{});
        elTreeMap.put("@check", new String[]{});
        elTreeMap.put("@current-change", new String[]{});
        elTreeMap.put("@node-expand", new String[]{});
        elTreeMap.put("@node-collapse", new String[]{});
        elTreeMap.put("@node-drag-start", new String[]{});
        elTreeMap.put("@node-drag-enter", new String[]{});
        elTreeMap.put("@node-drag-leave", new String[]{});
        elTreeMap.put("@node-drag-over", new String[]{});
        elTreeMap.put("@node-drag-end", new String[]{});
        elTreeMap.put("@node-drop", new String[]{});
        TAG_CONSTANT.put("el-tree", elTreeMap);

        HashMap<String, String[]> elPaginationMap = new HashMap<>();
        elPaginationMap.put("small", new String[]{"true", "false"});
        elPaginationMap.put("background", new String[]{"true", "false"});
        elPaginationMap.put("page-size", new String[]{"10"});
        elPaginationMap.put("total", new String[]{"100"});
        elPaginationMap.put("page-count", new String[]{"10"});
        elPaginationMap.put("pager-count", new String[]{"7"});
        elPaginationMap.put("current-page", new String[]{"1"});
        elPaginationMap.put("layout", new String[]{"sizes, prev, pager, next, jumper, ->, total, slot"});
        elPaginationMap.put("page-sizes", new String[]{"[10, 20, 30, 40, 50, 100]"});
        elPaginationMap.put("popper-class", new String[]{});
        elPaginationMap.put("prev-text", new String[]{"上一页"});
        elPaginationMap.put("next-text", new String[]{"下一页"});
        elPaginationMap.put("disabled", new String[]{"true", "false"});
        elPaginationMap.put("@size-change", new String[]{});
        elPaginationMap.put("@current-change", new String[]{});
        elPaginationMap.put("@prev-click", new String[]{});
        elPaginationMap.put("@next-click", new String[]{});
        TAG_CONSTANT.put("el-pagination", elPaginationMap);

        HashMap<String, String[]> elBadgeMap = new HashMap<>();
        elBadgeMap.put("value", new String[]{});
        elBadgeMap.put("max", new String[]{"10"});
        elBadgeMap.put("is-dot", new String[]{"true", "false"});
        elBadgeMap.put("hidden", new String[]{"true", "false"});
        TAG_CONSTANT.put("el-badge", elBadgeMap);

        HashMap<String, String[]> elAlertMap = new HashMap<>();
        elAlertMap.put("title", new String[]{});
        elAlertMap.put("type", new String[]{"success", "warning", "info", "error"});
        elAlertMap.put("description", new String[]{});
        elAlertMap.put("closable", new String[]{"true", "false"});
        elAlertMap.put("center", new String[]{"true", "false"});
        elAlertMap.put("close-text", new String[]{});
        elAlertMap.put("show-icon", new String[]{"true", "false"});
        elAlertMap.put("@close", new String[]{});
        TAG_CONSTANT.put("el-alert", elAlertMap);

        HashMap<String, String[]> elMenuMap = new HashMap<>();
        elMenuMap.put("mode", new String[]{"horizontal", "vertical"});
        elMenuMap.put("collapse", new String[]{"true", "false"});
        elMenuMap.put("background-color", new String[]{"#ffffff"});
        elMenuMap.put("text-color", new String[]{"#303133"});
        elMenuMap.put("active-text-color", new String[]{"#409eff"});
        elMenuMap.put("default-active", new String[]{});
        elMenuMap.put("default-openeds", new String[]{"[]"});
        elMenuMap.put("unique-opened", new String[]{"true", "false"});
        elMenuMap.put("menu-trigger", new String[]{"hover"});
        elMenuMap.put("router", new String[]{"true", "false"});
        elMenuMap.put("collapse-transition", new String[]{"true", "false"});
        elMenuMap.put("open", new String[]{"function(index)"});
        elMenuMap.put("close", new String[]{"function(index)"});
        elMenuMap.put("@select", new String[]{});
        elMenuMap.put("@open", new String[]{});
        elMenuMap.put("@close", new String[]{});
        TAG_CONSTANT.put("el-menu", elMenuMap);

        HashMap<String, String[]> elSubMenuMap = new HashMap<>();
        elSubMenuMap.put("index", new String[]{});
        elSubMenuMap.put("popper-class", new String[]{});
        elSubMenuMap.put("show-timeout", new String[]{"300"});
        elSubMenuMap.put("hide-timeout", new String[]{"300"});
        elSubMenuMap.put("disabled", new String[]{"true", "false"});
        elSubMenuMap.put("popper-append-to-body", new String[]{"true", "false"});
        TAG_CONSTANT.put("el-submenu", elSubMenuMap);

        HashMap<String, String[]> elMenuItemMap = new HashMap<>();
        elMenuItemMap.put("index", new String[]{});
        elMenuItemMap.put("route", new String[]{});
        elMenuItemMap.put("disabled", new String[]{"true", "false"});
        TAG_CONSTANT.put("el-menu-item", elMenuItemMap);

        HashMap<String, String[]> elMenuGroupMap = new HashMap<>();
        elMenuGroupMap.put("title", new String[]{});
        TAG_CONSTANT.put("el-menu-group", elMenuGroupMap);

        HashMap<String, String[]> elTabsMap = new HashMap<>();
        elTabsMap.put("type", new String[]{"card", "border-card"});
        elTabsMap.put("closable", new String[]{"true", "false"});
        elTabsMap.put("addable", new String[]{"true", "false"});
        elTabsMap.put("editable", new String[]{"true", "false"});
        elTabsMap.put("value", new String[]{});
        elTabsMap.put("tab-position", new String[]{"top", "right", "bottom", "left"});
        elTabsMap.put("@tab-click", new String[]{});
        elTabsMap.put("@tab-remove", new String[]{});
        elTabsMap.put("@tab-add", new String[]{});
        elTabsMap.put("@edit", new String[]{});
        TAG_CONSTANT.put("el-tabs", elTabsMap);

        HashMap<String, String[]> elTabPaneMap = new HashMap<>();
        elTabPaneMap.put("label", new String[]{});
        elTabPaneMap.put("disabled", new String[]{"true", "false"});
        elTabPaneMap.put("name", new String[]{});
        elTabPaneMap.put("closable", new String[]{"true", "false"});
        TAG_CONSTANT.put("el-tab-pane", elTabPaneMap);

        HashMap<String, String[]> elBreadcrumbMap = new HashMap<>();
        elBreadcrumbMap.put("separator", new String[]{"/"});
        elBreadcrumbMap.put("separator-class", new String[]{});
        TAG_CONSTANT.put("el-breadcrumb", elBreadcrumbMap);

        HashMap<String, String[]> elBreadcrumbItemMap = new HashMap<>();
        elBreadcrumbItemMap.put("to", new String[]{});
        elBreadcrumbItemMap.put("replace", new String[]{"true", "false"});
        TAG_CONSTANT.put("el-breadcrumb-item", elBreadcrumbItemMap);

        HashMap<String, String[]> elDropdownMap = new HashMap<>();
        elDropdownMap.put("type", new String[]{"primary", "success", "warning", "danger", "info", "text"});
        elDropdownMap.put("size", new String[]{"medium", "small", "mini"});
        elDropdownMap.put("split-button", new String[]{"true", "false"});
        elDropdownMap.put("placement", new String[]{"top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end"});
        elDropdownMap.put("trigger", new String[]{"hover", "click"});
        elDropdownMap.put("hide-on-click", new String[]{"true", "false"});
        elDropdownMap.put("show-timeout", new String[]{"250"});
        elDropdownMap.put("hide-timeout", new String[]{"150"});
        elDropdownMap.put("@click", new String[]{});
        elDropdownMap.put("@command", new String[]{});
        elDropdownMap.put("@visible-change", new String[]{});
        TAG_CONSTANT.put("el-dropdown", elDropdownMap);

        HashMap<String, String[]> elDropdownMenuMap = new HashMap<>();
        elDropdownMenuMap.put("command", new String[]{});
        elDropdownMenuMap.put("disabled", new String[]{"true", "false"});
        elDropdownMenuMap.put("divided", new String[]{"true", "false"});
        TAG_CONSTANT.put("el-dropdown-menu", elDropdownMenuMap);

        HashMap<String, String[]> elStepsMap = new HashMap<>();
        elStepsMap.put("space", new String[]{});
        elStepsMap.put("direction", new String[]{"vertical", "horizontal"});
        elStepsMap.put("active", new String[]{"0"});
        elStepsMap.put("process-status", new String[]{"wait", "process", "finish", "error", "success"});
        elStepsMap.put("finish-status", new String[]{"wait", "process", "finish", "error", "success"});
        elStepsMap.put("align-center", new String[]{"true", "false"});
        elStepsMap.put("simple", new String[]{"true", "false"});
        TAG_CONSTANT.put("el-steps", elStepsMap);
        HashMap<String, String[]> elStepMap = new HashMap<>();
        elStepMap.put("title", new String[]{});
        elStepMap.put("description", new String[]{});
        elStepMap.put("icon", new String[]{});
        elStepMap.put("status", new String[]{"wait", "process", "finish", "error", "success"});
        TAG_CONSTANT.put("el-step", elStepMap);

        HashMap<String, String[]> elDialogMap = new HashMap<>();
        elDialogMap.put("visible", new String[]{"true", "false"});
        elDialogMap.put("title", new String[]{});
        elDialogMap.put("width", new String[]{"50%"});
        elDialogMap.put("fullscreen", new String[]{"true", "false"});
        elDialogMap.put("top", new String[]{"15px"});
        elDialogMap.put("modal", new String[]{"true", "false"});
        elDialogMap.put("modal-append-to-body", new String[]{"true", "false"});
        elDialogMap.put("append-to-body", new String[]{"true", "false"});
        elDialogMap.put("lock-scroll", new String[]{"true", "false"});
        elDialogMap.put("custom-class", new String[]{});
        elDialogMap.put("close-on-click-modal", new String[]{"true", "false"});
        elDialogMap.put("close-on-press-escape", new String[]{"true", "false"});
        elDialogMap.put("show-close", new String[]{"true", "false"});
        elDialogMap.put("before-close", new String[]{"function(done)"});
        elDialogMap.put("center", new String[]{"true", "false"});
        elDialogMap.put("@close", new String[]{});
        elDialogMap.put("@open", new String[]{});
        TAG_CONSTANT.put("el-dialog", elDialogMap);

        HashMap<String, String[]> elTooltipMap = new HashMap<>();
        elTooltipMap.put("effect", new String[]{"dark", "light"});
        elTooltipMap.put("content", new String[]{});
        elTooltipMap.put("placement", new String[]{"top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end", "left", "left-start", "left-end", "right", "right-start", "right-end"});
        elTooltipMap.put("value", new String[]{"true", "false"});
        elTooltipMap.put("disabled", new String[]{"true", "false"});
        elTooltipMap.put("offset", new String[]{"0"});
        elTooltipMap.put("transition", new String[]{"el-fade-in-linear"});
        elTooltipMap.put("visible-arrow", new String[]{"true", "false"});
        elTooltipMap.put("popper-options", new String[]{"{ boundariesElement: 'body', gpuAcceleration: false }"});
        elTooltipMap.put("open-delay", new String[]{"0"});
        elTooltipMap.put("manual", new String[]{"true", "false"});
        elTooltipMap.put("popper-class", new String[]{});
        elTooltipMap.put("enterable", new String[]{"true", "false"});
        elTooltipMap.put("hide-after", new String[]{"0"});
        TAG_CONSTANT.put("el-tooltip", elTooltipMap);

        HashMap<String, String[]> elPopoverMap = new HashMap<>();
        elPopoverMap.put("trigger", new String[]{"click", "focus", "hover", "manual"});
        elPopoverMap.put("title", new String[]{});
        elPopoverMap.put("content", new String[]{});
        elPopoverMap.put("width", new String[]{"150px"});
        elPopoverMap.put("placement", new String[]{"top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end", "left", "left-start", "left-end", "right", "right-start", "right-end"});
        elPopoverMap.put("disabled", new String[]{"true", "false"});
        elPopoverMap.put("value", new String[]{"true", "false"});
        elPopoverMap.put("offset", new String[]{"0"});
        elPopoverMap.put("transition", new String[]{"fade-in-linear"});
        elPopoverMap.put("visible-arrow", new String[]{"true", "false"});
        elPopoverMap.put("popper-options", new String[]{"{ boundariesElement: 'body', gpuAcceleration: false }"});
        elPopoverMap.put("popper-class", new String[]{});
        elPopoverMap.put("open-delay", new String[]{"300"});
        elPopoverMap.put("@show", new String[]{});
        elPopoverMap.put("@after-enter", new String[]{});
        elPopoverMap.put("@hide", new String[]{});
        elPopoverMap.put("@after-leave", new String[]{});
        TAG_CONSTANT.put("el-popover", elPopoverMap);

        HashMap<String, String[]> elCardMap = new HashMap<>();
        elCardMap.put("header", new String[]{});
        elCardMap.put("body-style", new String[]{"{ padding: '20px' }"});
        elCardMap.put("shadow", new String[]{"always", "hover", "never"});
        TAG_CONSTANT.put("el-card", elCardMap);

        HashMap<String, String[]> elCarouselMap = new HashMap<>();
        elCarouselMap.put("height", new String[]{});
        elCarouselMap.put("initial-index", new String[]{"0"});
        elCarouselMap.put("trigger", new String[]{"click"});
        elCarouselMap.put("autoplay", new String[]{"true", "false"});
        elCarouselMap.put("interval", new String[]{"3000"});
        elCarouselMap.put("indicator-position", new String[]{"outside", "none"});
        elCarouselMap.put("arrow", new String[]{"always", "hover", "never"});
        elCarouselMap.put("type", new String[]{"card"});
        elCarouselMap.put("@change", new String[]{});
        TAG_CONSTANT.put("el-carousel", elCarouselMap);
        HashMap<String, String[]> elCarouselItemMap = new HashMap<>();
        elCarouselItemMap.put("name", new String[]{});
        elCarouselItemMap.put("label", new String[]{});
        TAG_CONSTANT.put("el-carousel-item", elCarouselItemMap);

        HashMap<String, String[]> elCollapseMap = new HashMap<>();
        elCollapseMap.put("accordion", new String[]{"true", "false"});
        elCollapseMap.put("value", new String[]{});
        elCollapseMap.put("@change", new String[]{});
        TAG_CONSTANT.put("el-collapse", elCollapseMap);
        HashMap<String, String[]> elCollapseItemMap = new HashMap<>();
        elCollapseItemMap.put("name", new String[]{});
        elCollapseItemMap.put("title", new String[]{});
        TAG_CONSTANT.put("el-collapse-item", elCollapseItemMap);
    }
}
